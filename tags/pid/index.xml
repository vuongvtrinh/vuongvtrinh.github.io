<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pid on Vuong V. Trinh</title>
    <link>https://vuongvtrinh.github.io/tags/pid/</link>
    <description>Recent content in pid on Vuong V. Trinh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Vuong V. Trinh 2016</copyright>
    <lastBuildDate>Tue, 29 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vuongvtrinh.github.io/tags/pid/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PID Control</title>
      <link>https://vuongvtrinh.github.io/post/pid-control/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/post/pid-control/</guid>
      <description>Anti-windup Techniques Incremental algorithm Back-calculation Conditional integration Parameters tuning First tuning Relay Method  Stable/Unstable processes No trajectory selection Need around 4 cycles: can take time for a slow process  Simple Internal Model Control Method (SIMC)  Stable process only Desired trajectory to be specified by user One single step: fast  Fine tuning Iterative Feedback Tuning Method (IFT)  Need an existing tuning not too bad Desired trajectory to be specified by user Close loop tuning: better safety Need around 4 cycles: can take time for a slow process Note: cannot be used if the set-point is calculated in PLC  References  Anti-Windup Techniques Automatic Tuning of Simple Regulators with Specifications on Phase and Amplitude Margins, Karl J.</description>
    </item>
    
  </channel>
</rss>