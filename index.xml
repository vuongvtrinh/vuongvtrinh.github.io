<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vuong V. Trinh on Vuong V. Trinh</title>
    <link>https://vuongvtrinh.github.io/</link>
    <description>Recent content in Vuong V. Trinh on Vuong V. Trinh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Vuong V. Trinh 2016</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CC BY SA</title>
      <link>https://vuongvtrinh.github.io/license/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0200</pubDate>
      
      <guid>https://vuongvtrinh.github.io/license/</guid>
      <description>&lt;p&gt;My website&amp;rsquo;s content are released under a &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; target=&#34;_blank&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;i class=&#34;fab fa-creative-commons fa-2x&#34;&gt;&lt;/i&gt;&lt;i class=&#34;fab fa-creative-commons-by fa-2x&#34;&gt;&lt;/i&gt;&lt;i class=&#34;fab fa-creative-commons-sa fa-2x&#34;&gt;&lt;/i&gt;
&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Telegram chatbot for data-driven analytics of crypto-market on Binance: on-chain vs. off-chain transactions</title>
      <link>https://vuongvtrinh.github.io/post/trading-analysis-bot/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/post/trading-analysis-bot/</guid>
      <description>

&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;import os
import telegram
from telegram import ParseMode
from telegram.ext import Updater, CommandHandler
from binance.client import Client
from binance_trading_bot import analysis, monitor, news, bitcoin, supply, volume
from sqlalchemy import create_engine
from pandas.io import sql

MANUAL_TEXT = &amp;quot;&amp;quot;&amp;quot;Data-driven analytics of crypto-market on Binance.
*Features*
- Altcoin supply analysis
- Exchange movement statistics
- Bitcoin aggregated charts
- Newsflow
*Commands*
- /x &amp;lt;coin&amp;gt;
Usage: /x fet knc. 
- /t &amp;lt;market&amp;gt;
Usage: /t qtumusdt or /t btt xlmusdt bttbnb.
- /s &amp;lt;asset&amp;gt;
Usage: /s qtum or /s btt fet.
- /m
Usage: /m.
- /b &amp;lt;n-day&amp;gt;
Usage: /b or /b 90.
- /e &amp;lt;n-day&amp;gt;
Usage: /e or /e 90.
- /n
Usage: /n.
*Supports*
Start trading on [Binance](https://www.binance.com/?ref=13339920), [Huobi](https://www.huobi.br.com/en-us/topic/invited/?invite_code=x93k3) or [Coinbase](https://www.coinbase.com/join/581a706d01bc8b00dd1d1737).
Use the [Brave](https://brave.com/ken335) privacy browser to earn BAT token.
BTC tipjar: [1DrEMhMP5rAytKyKXRzc6szTcUX8bZzZgq](1DrEMhMP5rAytKyKXRzc6szTcUX8bZzZgq).
*Contact*
@kakalotz
_Disclammer: only accessible for registered users._
 &amp;quot;&amp;quot;&amp;quot;

TELEGRAM_TOKEN = os.environ[&#39;TELEGRAM_TOKEN&#39;]
BINANCE_SECRET_KEY = os.environ[&#39;BINANCE_SECRET_KEY&#39;]
BINANCE_API_KEY = os.environ[&#39;BINANCE_API_KEY&#39;]
SQLALCHEMY_DATABASE_URI = os.environ[&#39;SQLALCHEMY_DATABASE_URI&#39;]

engine = create_engine(SQLALCHEMY_DATABASE_URI)
conn = engine.raw_connection()
userList = sql.read_sql(&#39;SELECT * FROM &amp;quot;userList&amp;quot;&#39;, conn)[&#39;USERNAME&#39;].tolist()
conn.close() 

client = Client(BINANCE_API_KEY, BINANCE_SECRET_KEY)

def x(bot, update, args):
    bot.send_chat_action(chat_id=update.message.chat_id, 
                         action=telegram.ChatAction.TYPING)
    if str(update.message.from_user.username) in userList:
        TIME_FRAME_STEP = &#39;4h&#39;
        TIME_FRAME_LIST = [&#39;4h&#39;, &#39;1d&#39;]
        TIME_FRAME_DURATION_LIST = [&#39;45 days ago UTC&#39;, &#39;90 days ago UTC&#39;]
        for coin in args:
            market = coin.upper()+&#39;BTC&#39;
            for i in range(len(TIME_FRAME_LIST)):
                TIME_FRAME = TIME_FRAME_LIST[i]
                TIME_FRAME_DURATION = TIME_FRAME_DURATION_LIST[i]
                try:
                    supply.supply_analysis(client, market, TIME_FRAME_STEP, TIME_FRAME, TIME_FRAME_DURATION)
                    bot.send_photo(chat_id=update.message.chat_id, 
                               photo=open(&#39;img/&#39;+market+&#39;_&#39;+TIME_FRAME.upper()+&#39;.png&#39;, &#39;rb&#39;))
                except Exception:
                    pass

def t(bot, update, args):
    bot.send_chat_action(chat_id=update.message.chat_id, 
                         action=telegram.ChatAction.TYPING)
    if str(update.message.from_user.username) in userList:
        for market in args:
            market = market.upper()
            TIME_FRAME_STEP = [&#39;1d&#39;, &#39;1d&#39;, &#39;4h&#39;]
            TIME_FRAME = [&#39;1w&#39;, &#39;1d&#39;, &#39;4h&#39;]
            TIME_FRAME_DURATION = [&#39;365 days ago UTC&#39;, &#39;90 days ago UTC&#39;, &#39;14 days ago UTC&#39;]
            try:
                volume.analysis_visual(client, market, TIME_FRAME_STEP, TIME_FRAME, TIME_FRAME_DURATION)
            except Exception:
                market = market+&#39;BTC&#39;
                volume.analysis_visual(client, market, TIME_FRAME_STEP, TIME_FRAME, TIME_FRAME_DURATION)
            bot.send_photo(chat_id=update.message.chat_id, 
                       photo=open(&#39;img/&#39;+market+&#39;.png&#39;, &#39;rb&#39;))

def s(bot, update, args):
    bot.send_chat_action(chat_id=update.message.chat_id, 
                         action=telegram.ChatAction.TYPING)
    if str(update.message.from_user.username) in userList:
        for asset in args:
            asset = asset.upper()
            msg = analysis.asset_analysis(client, asset)
            update.message.reply_text(msg, parse_mode=ParseMode.MARKDOWN)

def m(bot, update):
    bot.send_chat_action(chat_id=update.message.chat_id, 
                         action=telegram.ChatAction.TYPING)
    if str(update.message.from_user.username) in userList:
        msg = monitor.market_change(client)
        update.message.reply_text(msg, parse_mode=ParseMode.MARKDOWN)
        
def b(bot, update, args):
    bot.send_chat_action(chat_id=update.message.chat_id, 
                         action=telegram.ChatAction.TYPING)
    if str(update.message.from_user.username) in userList:
        try:
            timeInterval = int(args[0])
        except Exception:
            timeInterval = 120
        bitcoin.blockchain(timeInterval)
        bot.send_photo(chat_id=update.message.chat_id, 
                   photo=open(&#39;img/blockchain.png&#39;, &#39;rb&#39;))
        bitcoin.bid_ask_sum()
        bot.send_photo(chat_id=update.message.chat_id, 
                   photo=open(&#39;img/bidasksum.png&#39;, &#39;rb&#39;))
        monitor.market_movement(client, timeInterval)
        bot.send_photo(chat_id=update.message.chat_id, 
                   photo=open(&#39;img/market.png&#39;, &#39;rb&#39;))
                   
def e(bot, update, args):
    bot.send_chat_action(chat_id=update.message.chat_id, 
                         action=telegram.ChatAction.TYPING)
    if str(update.message.from_user.username) in userList:
        try:
            timeInterval = int(args[0])
        except Exception:
            timeInterval = 120
        monitor.market_movement(client, timeInterval)
        bot.send_photo(chat_id=update.message.chat_id, 
                   photo=open(&#39;img/market.png&#39;, &#39;rb&#39;))
        
def n(bot, update):
    bot.send_chat_action(chat_id=update.message.chat_id, 
                         action=telegram.ChatAction.TYPING)
    if str(update.message.from_user.username) in userList:
        msg = news.newsflow()
        update.message.reply_text(msg, 
                                  parse_mode=ParseMode.MARKDOWN,
                                  disable_web_page_preview=True)

def manual(bot,update):
    bot.send_message(chat_id=update.message.chat_id, 
                     text=MANUAL_TEXT, 
                     parse_mode=ParseMode.MARKDOWN, 
                     disable_web_page_preview=True)

def main():
    updater=Updater(TELEGRAM_TOKEN)
    dp=updater.dispatcher
    dp.add_handler(CommandHandler(&amp;quot;start&amp;quot;, manual))
    dp.add_handler(CommandHandler(&amp;quot;help&amp;quot;, manual))
    dp.add_handler(CommandHandler(&amp;quot;m&amp;quot;, m))
    dp.add_handler(CommandHandler(&amp;quot;n&amp;quot;, n))
    dp.add_handler(CommandHandler(&amp;quot;b&amp;quot;, b, pass_args=True))
    dp.add_handler(CommandHandler(&amp;quot;e&amp;quot;, e, pass_args=True))
    dp.add_handler(CommandHandler(&amp;quot;x&amp;quot;, x, pass_args=True))
    dp.add_handler(CommandHandler(&amp;quot;t&amp;quot;, t, pass_args=True))
    dp.add_handler(CommandHandler(&amp;quot;s&amp;quot;, s, pass_args=True))
    updater.start_polling()
    updater.idle()

if __name__ == &#39;__main__&#39;:
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;deployment-on-heroku-platform&#34;&gt;Deployment on Heroku platform&lt;/h2&gt;

&lt;h3 id=&#34;initialize&#34;&gt;Initialize&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;heroku create trading-analysis-bot --buildpack heroku/python
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-postgres-database-for-user-management&#34;&gt;Setup Postgres database for user management&lt;/h3&gt;

&lt;h3 id=&#34;deploy-to-the-cloud&#34;&gt;Deploy to the cloud&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;heroku create trading-analysis-bot --buildpack heroku/python
heroku config:set TELEGRAM_TOKEN=XXXXXXXXXXXXXXXXXXXXXXXXX
heroku config:set BINANCE_SECRET_KEY=XXXXXXXXXXXXXXXXXXXXXXXXX
heroku config:set BINANCE_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXXX
heroku config:set SQLALCHEMY_DATABASE_URI=XXXXXXXXXXXXXXXXXXXXXXXXX
git push heroku master
heroku ps:scale bot=1 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Innovative Advanced Control of Large Cryogenic Systems</title>
      <link>https://vuongvtrinh.github.io/project/cryogenic-refrigerator/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/project/cryogenic-refrigerator/</guid>
      <description>

&lt;h2 id=&#34;cryogenic-plants-at-cea-and-cern&#34;&gt;Cryogenic Plants at CEA and CERN&lt;/h2&gt;



&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/cryogenic-refrigerator/gallery/400W.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/cryogenic-refrigerator/gallery/400W.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/cryogenic-refrigerator/gallery/cern_wcs18kw.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/cryogenic-refrigerator/gallery/cern_wcs18kw.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;

&lt;h2 id=&#34;explicit-constrained-control-of-warm-compression-stations&#34;&gt;Explicit Constrained Control of Warm Compression Stations&lt;/h2&gt;

&lt;h3 id=&#34;process-configuration-and-dynamic-simulator&#34;&gt;Process configuration and dynamic simulator&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;wcs-config.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;wcs-config.png&#34; alt=&#34;Warm compression station configuration&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;wcs-simulator.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;wcs-simulator.png&#34; alt=&#34;Warm compression station&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;allocation-control-and-validation-results&#34;&gt;Allocation control and validation results&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;wcs-allocation.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;wcs-allocation.png&#34; alt=&#34;Allocation control&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;wcs-valid.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;wcs-valid.png&#34; alt=&#34;Validation result&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hierarchical-constrained-control-of-cryogenic-refrigerators&#34;&gt;Hierarchical Constrained Control of Cryogenic Refrigerators&lt;/h2&gt;

&lt;h3 id=&#34;process-diagram-and-dynamic-simulator&#34;&gt;Process diagram and dynamic simulator&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;process-diagram.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;process-diagram.png&#34; alt=&#34;Process diagram&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;br-simulator.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;br-simulator.png&#34; alt=&#34;Brayton cycle&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;jt-simulator.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;jt-simulator.png&#34; alt=&#34;Joule-Thompson cycle&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;hierarchical-control-algorithm-and-numerical-results&#34;&gt;Hierarchical control algorithm and numerical results&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;hdmpc-algo.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;hdmpc-algo.png&#34; alt=&#34;Hierarchical control algorithm&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;aa-convergence.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;aa-convergence.png&#34; alt=&#34;Convergence result&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quantitative Analytics and Trading Strategies of Cryptoassets</title>
      <link>https://vuongvtrinh.github.io/project/quantitative-finance/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/project/quantitative-finance/</guid>
      <description>

&lt;p&gt;This project develops an intelligent data driven application to monitor blockchain projects and to analyze cryptoassets from both utility and speculation perspectives. We target blockchain entrepreneurs, investors and traders all along the life of projects: token generation, listing on secondary market, product delivery, product usage, and token valorization.&lt;/p&gt;

&lt;h2 id=&#34;data-driven-analytics&#34;&gt;Data-Driven Analytics&lt;/h2&gt;

&lt;h3 id=&#34;altcoin-price-versus-supply-analysis&#34;&gt;Altcoin price versus supply analysis&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;t.png&#34; alt=&#34;t.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;x1.png&#34; alt=&#34;x1.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;x2.png&#34; alt=&#34;x2.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;market-movement-statistics&#34;&gt;Market movement statistics&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;market.png&#34; alt=&#34;market.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;bitcoin-aggregated-statistics-traded-exchanges-vs-network-transactions&#34;&gt;Bitcoin aggregated statistics: traded exchanges vs. network transactions&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;blockchain.png&#34; alt=&#34;blockchain.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;bidasksum.png&#34; alt=&#34;bidasksum.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;newsflow-sentiment-analysis&#34;&gt;Newsflow sentiment analysis&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;n.png&#34; alt=&#34;n.png&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;advanced-trading-strategies&#34;&gt;Advanced Trading Strategies&lt;/h2&gt;

&lt;h3 id=&#34;portfolio-management-and-optimization&#34;&gt;Portfolio management and optimization&lt;/h3&gt;

&lt;h3 id=&#34;iceberg-order-and-beyond&#34;&gt;Iceberg order and beyond&lt;/h3&gt;

&lt;h2 id=&#34;web-application-screenshots&#34;&gt;Web Application Screenshots&lt;/h2&gt;



&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/quantitative-finance/gallery/blog.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/quantitative-finance/gallery/blog.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/quantitative-finance/gallery/user.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/quantitative-finance/gallery/user.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Real-time Anomaly Detection for Industrial Big Data</title>
      <link>https://vuongvtrinh.github.io/project/anomaly-detection/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/project/anomaly-detection/</guid>
      <description>&lt;p&gt;As the Industrial Internet of Things (IIoT) grows, systems are increasingly being monitored by arrays of sensors returning time-series data at ever-increasing &amp;lsquo;volume, velocity and variety&amp;rsquo; (i.e. Industrial Big Data). Time Series is defined as a set of observations taken at a particular period of time. Time Series is also known as the stochastic process as it represents the vector of stochastic variables observed at regular interval of time. It appears naturally in many application areas such as economics, science, environment, medicine, etc. Anomaly detection problem for time series is usually formulated as finding outlier data points relative to some standard or usual signal. We are working on developing some advanced approaches using Machine Learning, Deep Learning and Data Mining for anomaly detection of time series in many application areas. Finally, the proposed approaches are validated on a set of real data in industry.&lt;/p&gt;



&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/anomaly-detection.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/anomaly-detection.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/dfn-obj.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/dfn-obj.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/ibrl_wsn.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/ibrl_wsn.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/ocsvm-train.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/ocsvm-train.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/ocsvm.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/ocsvm.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/svdd.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/svdd.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/svm.png&#34; &gt;
  &lt;img src=&#34;https://vuongvtrinh.github.io/project/anomaly-detection/gallery/svm.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Fixed-point based hierarchical MPC control design for a cryogenic refrigerator</title>
      <link>https://vuongvtrinh.github.io/publication/2017-hdmpc-jpc/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/publication/2017-hdmpc-jpc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>On the stabilization of fixed-point iterations arising in hierarchical control design</title>
      <link>https://vuongvtrinh.github.io/publication/2017-hdmpc-ifacwc/</link>
      <pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/publication/2017-hdmpc-ifacwc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Anomaly detection in wireless sensor networks via support vector data description with Mahalanobis kernels and discriminative adjustment</title>
      <link>https://vuongvtrinh.github.io/publication/2017-wsn-nics/</link>
      <pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/publication/2017-wsn-nics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Control of a Stirling Engine</title>
      <link>https://vuongvtrinh.github.io/project/stirling-engine/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/project/stirling-engine/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;stirling_diagram.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;stirling_diagram.png&#34; alt=&#34;Process diagram&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;empc_nonlin.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;empc_nonlin.png&#34; alt=&#34;Nonlinear analysis&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;empc_valid.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;empc_valid.png&#34; alt=&#34;Validation and real-time analysis&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Explicit model predictive control via nonlinear piecewise approximations</title>
      <link>https://vuongvtrinh.github.io/publication/2016-enmpc-nolcos/</link>
      <pubDate>Mon, 17 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/publication/2016-enmpc-nolcos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Data driven hyperparameter optimization of one-class support vector machines for anomaly detection in wireless sensor networks</title>
      <link>https://vuongvtrinh.github.io/publication/2017-wsn-atc/</link>
      <pubDate>Tue, 16 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/publication/2017-wsn-atc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Robust Active Vibration Control</title>
      <link>https://vuongvtrinh.github.io/project/active-vibration-control/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://vuongvtrinh.github.io/project/active-vibration-control/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
