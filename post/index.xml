<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Vuong V. Trinh</title>
    <link>https://vuongvtrinh.github.io/post/</link>
      <atom:link href="https://vuongvtrinh.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Vuong V. Trinh</copyright><lastBuildDate>Wed, 30 Jan 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://vuongvtrinh.github.io/img/logo.png</url>
      <title>Posts</title>
      <link>https://vuongvtrinh.github.io/post/</link>
    </image>
    
    <item>
      <title>Technical Resources for Automation and Control Professionals</title>
      <link>https://vuongvtrinh.github.io/post/technical-resources-for-automation-and-control-professionals/</link>
      <pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://vuongvtrinh.github.io/post/technical-resources-for-automation-and-control-professionals/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;wordcloud.svg&#34; alt=&#34;wordcloud.svg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;automation-and-control&#34;&gt;Automation and Control&lt;/h2&gt;
&lt;h3 id=&#34;handbooks&#34;&gt;Handbooks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A Guide to the Automation Body of Knowledge (Vernon L. Trevathan)&lt;/li&gt;
&lt;li&gt;Instrument Engineers&amp;rsquo; Handbook: Process Measurement and Analysis (Béla G. Lipták)&lt;/li&gt;
&lt;li&gt;Instrument Engineers&amp;rsquo; Handbook: Process Control and Optimization (Béla G. Lipták)&lt;/li&gt;
&lt;li&gt;Instrument Engineers&amp;rsquo; Handbook: Process Software and Digital Networks (Béla G. Lipták)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;control-system-documentation&#34;&gt;Control System Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;isa_51.pdf&#34;&gt;ANSI/ISA5.1-2009 - Instrumentation Symbols and Identification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;isa_53.pdf&#34;&gt;ANSI/ISA5.3-1983 - Graphic Symbols for Distributed Control-Shared Display Instrumentation, Logic &amp;amp; Computer Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;isa_54.pdf&#34;&gt;ANSI/ISA5.4-1991 - Instrument Loop Diagrams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.automation.siemens.com/bilddb/index.aspx&#34;&gt;Industry Image Database: Photos, graphics and CAx data free of charge for your presentation or engineering process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;optimization-and-control&#34;&gt;Optimization and Control&lt;/h2&gt;
&lt;h3 id=&#34;numerical-optimization&#34;&gt;Numerical Optimization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Constrained Optimization and Lagrange Multiplier Methods (Dimitri P. Bertsekas)&lt;/li&gt;
&lt;li&gt;Parallel and Distributed Computation Numerical Methods (Dimitri P. Bertsekas)&lt;/li&gt;
&lt;li&gt;Network Optimization: Continuous and Discrete Methods (Dimitri P. Bertsekas)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;classical-control&#34;&gt;Classical Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;relay1984.pdf&#34;&gt;Automatic Tuning of Simple Regulators with Specifications on Phase and Amplitude Margins&lt;/a&gt; (Karl J. Astrom and Tore Hagglund)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;simc2012.pdf&#34;&gt;The SIMC Method for Smooth PID Controller Tuning&lt;/a&gt; (Sigurd Skogestad and Chriss Grimholt)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;model-predictive-control&#34;&gt;Model Predictive Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Model Predictive Control: Theory, Computation, and Design (David Mayne, James B. Rawlings, and Moritz Diehl)&lt;/li&gt;
&lt;li&gt;Numerical Optimal Control (Moritz Diehl and Sébastien Gros)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.isa.org/&#34;&gt;https://www.isa.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.controleng.com/&#34;&gt;https://www.controleng.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.controlglobal.com/&#34;&gt;https://www.controlglobal.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.automation.com/&#34;&gt;https://www.automation.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Data Analytics Dashboard using Flask and Highcharts</title>
      <link>https://vuongvtrinh.github.io/post/data-analytics-dashboard/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://vuongvtrinh.github.io/post/data-analytics-dashboard/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;text-shadow: none;&#34;&gt;&lt;a class=&#34;github-button&#34; href=&#34;https://github.com/trinhvv/flask-highcharts&#34; data-icon=&#34;octicon-star&#34; data-size=&#34;large&#34; data-show-count=&#34;true&#34; aria-label=&#34;Star this on GitHub&#34;&gt;Star&lt;/a&gt;&lt;script async defer src=&#34;https://buttons.github.io/buttons.js&#34;&gt;&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A tutorial to develop a web dashboard for data analytics using Python Flask and JavaScript Highcharts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub repository: &lt;a href=&#34;https://github.com/trinhvv/flask-highcharts&#34;&gt;https://github.com/trinhvv/flask-highcharts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Live demo: &lt;a href=&#34;https://flask-highcharts.herokuapp.com&#34;&gt;https://flask-highcharts.herokuapp.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fetch data from &lt;a href=&#34;https://www.blockchain.com/&#34;&gt;https://www.blockchain.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data preprocessing in Flask then parse to Highcharts&lt;/li&gt;
&lt;li&gt;Deploy to Heroku&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;structure&#34;&gt;Structure&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;app.py
Procfile
requirements.txt
runtime.txt
static/
templates/
    index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;requirementstxt&#34;&gt;requirements.txt&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Flask
gunicorn
pandas
six
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;apppy&#34;&gt;app.py&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, render_template, jsonify
import pandas as pd
from six.moves import urllib
import json
 
app = Flask(__name__)
 
@app.route(&amp;quot;/data.json&amp;quot;)
def data():
    timeInterval = 1000
    data = pd.DataFrame()
    featureList = [&#39;market-price&#39;, 
                   &#39;trade-volume&#39;]
    for feature in featureList:
        url = &amp;quot;https://api.blockchain.info/charts/&amp;quot;+feature+&amp;quot;?timespan=&amp;quot;+str(timeInterval)+&amp;quot;days&amp;amp;format=json&amp;quot;
        data[&#39;time&#39;] = pd.DataFrame(json.loads(urllib.request.urlopen(url).read().decode(&#39;utf-8&#39;))[&#39;values&#39;])[&#39;x&#39;]*1000
        data[feature] = pd.DataFrame(json.loads(urllib.request.urlopen(url).read().decode(&#39;utf-8&#39;))[&#39;values&#39;])[&#39;y&#39;]
    result = data.to_dict(orient=&#39;records&#39;)
    seq = [[item[&#39;time&#39;], item[&#39;market-price&#39;], item[&#39;trade-volume&#39;]] for item in result]
    return jsonify(seq)
 
@app.route(&amp;quot;/&amp;quot;)
def index():
    return render_template(&#39;index.html&#39;)
 
if __name__ == &#39;__main__&#39;:
    app.run(debug=True, threaded=True, host=&#39;0.0.0.0&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;templatesindexhtml&#34;&gt;templates/index.html&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD HTML 4.01//EN&amp;quot; &amp;quot;http://www.w3.org/TR/html4/strict.dtd&amp;quot;&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;
      Chart
    &amp;lt;/title&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot;&amp;gt;
    &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;https://code.highcharts.com/stock/highstock.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;https://code.highcharts.com/stock/modules/exporting.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        $.getJSON(&#39;/data.json&#39;, function (data) {
            // create the chart
            Highcharts.stockChart(&#39;container&#39;, {
                title: {
                    text: &#39;Bitcoin&#39;
                },
                rangeSelector: {
                    selected: 1,
                    inputEnabled: false
                },
                series: [{
                    name: &#39;Bitcoin&#39;,
                    data: data,
                    tooltip: {
                        valueDecimals: 2
                    }
                }]
            });
        });
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;container&amp;quot; style=&amp;quot;height: 400px; min-width: 310px; max-width: 1000px&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;procfile&#34;&gt;Procfile&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;web: gunicorn app:app --log-file=-
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;runtimetxt&#34;&gt;runtime.txt&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python-3.6.5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;deploy-to-heroku&#34;&gt;Deploy to Heroku&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;heroku create flask-highcharts --buildpack heroku/python
heroku login
git init
heroku git:remote -a flask-highcharts
git add .
git commit -am &amp;quot;make it better&amp;quot;
git push heroku master
heroku ps:scale bot=1 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;screenshot&#34;&gt;Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;screenshot.png&#34; alt=&#34;screenshot.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
